# Configuración de la aplicación Temperature Conversion API
server:
  port: 8080
  servlet:
    context-path: /
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain

spring:
  application:
    name: temperature-converter-api

  # Configuración de Jackson para JSON
  jackson:
    default-property-inclusion: non_null
    serialization:
      write-dates-as-timestamps: false
    deserialization:
      fail-on-unknown-properties: false

  # Configuración de validación
  mvc:
    throw-exception-if-no-handler-found: true
  web:
    resources:
      add-mappings: false

# Configuración de la aplicación
app:
  title: Temperature Conversion API
  description: API REST en Java para conversión de temperaturas entre Celsius y Fahrenheit
  version: 1.0.0

# Configuración de documentación OpenAPI/Swagger
springdoc:
  api-docs:
    path: /api/docs
  swagger-ui:
    path: /api/swagger-ui.html
    enabled: true
    try-it-out-enabled: true
    filter: true
    tags-sorter: alpha
    operations-sorter: alpha

# Configuración de logging
logging:
  level:
    com.temperature.api: DEBUG
    org.springframework.web: INFO
    org.springframework.security: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/temperature-api.log

# Configuración de actuator para monitoreo
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when_authorized
  info:
    env:
      enabled: true
    java:
      enabled: true
    os:
      enabled: true

# Información adicional para actuator info
info:
  app:
    name: ${app.title}
    description: ${app.description}
    version: ${app.version}
    encoding: UTF-8
    java:
      version: ${java.version}
